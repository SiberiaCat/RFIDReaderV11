/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.c
 #	source generated by 4D Plugin Wizard
 #	Project : RFIDReader
 #	author : Alex
 #	10.08.2017
 #
 # --------------------------------------------------------------------------------*/


#include "reader.h"

static CReader gReader;

void PluginMain( long selector, PA_PluginParameters params )
{
	switch( selector )
	{
// --- RFIDReader

		case eCMD_RFID_Plug_Transmit :
			RFID_Plug_Transmit( params );
			break;

		case eCMD_RFID_Plug_Disconnect :
			RFID_Plug_Disconnect( params );
			break;

		case eCMD_RFID_Plug_ReleaseContext :
			RFID_Plug_ReleaseContext( params );
			break;

		case eCMD_RFID_Plug_Connect :
			RFID_Plug_Connect( params );
			break;

		case eCMD_RFID_Plug_ListReader :
			RFID_Plug_ListReader( params );
			break;

		case eCMD_RFID_Plug_ValidContext :
			RFID_Plug_ValidContext( params );
			break;

		case eCMD_RFID_Plug_EstablishContext :
			RFID_Plug_EstablishContext( params );
			break;

	}
}

// ---------------------------------- RFIDReader ----------------------------------


void RFID_Plug_Transmit( PA_PluginParameters params )
{
	PA_long32 index = PA_GetLongParameter(params, 1);
	PA_long32 protocol = PA_GetLongParameter(params, 3);

	PA_long32 buffer_len = 0;
	LPBYTE buffer = 0;

	PA_long32 returnValue = gReader.Transmit(index, &buffer, &buffer_len, protocol);
	if (buffer != 0) PA_SetBlobParameter(params, 2, buffer, buffer_len);

	PA_ReturnLong(params, returnValue);
}

void RFID_Plug_Disconnect( PA_PluginParameters params )
{
	PA_long32 index = PA_GetLongParameter(params, 1);
	PA_long32 returnValue = gReader.Disconnect(index);
	if (returnValue == SCARD_S_SUCCESS) {
		PA_SetLongParameter(params, 1, 0);
	}
	PA_ReturnLong(params, returnValue);
}

void RFID_Plug_ReleaseContext( PA_PluginParameters params )
{
	PA_long32 returnValue = gReader.ReleaseContext();
	PA_ReturnLong(params, returnValue);
}

void RFID_Plug_Connect( PA_PluginParameters params )
{
	PA_long32 returnValue = SCARD_S_SUCCESS;
	PA_long32 readername_len = PA_GetBlobParameter(params, 1, 0);
	PA_long32 protocol = PA_GetLongParameter(params, 2);
	PA_long32 hCard = 0;

	LPSTR readername = 0;

	if (readername_len == 0) {
		returnValue = SCARD_E_INVALID_VALUE;
	}
	else {
		readername = (LPSTR)malloc(readername_len*sizeof(char) + 1);
		if (readername != 0) {
			memset(readername, 0, readername_len);
			PA_GetBlobParameter(params, 1, readername);
			readername[readername_len] = '\0';
			readername_len = strlen(readername);
		}
		if (readername == 0) {
			returnValue = SCARD_E_NO_MEMORY;
		}
	}

	if (returnValue == SCARD_S_SUCCESS) {
		returnValue = gReader.Connect(readername, readername_len, &protocol, &hCard);
	}

	PA_SetLongParameter(params, 2, protocol);
	PA_SetLongParameter(params, 3, hCard);
	PA_ReturnLong(params, returnValue);
}

void RFID_Plug_ListReader( PA_PluginParameters params )
{
	PA_long32 readername_len = 0;
	LPSTR mszReaders = 0;

	PA_long32 returnValue = gReader.ListReader(&mszReaders, &readername_len);
	if (mszReaders != 0) PA_SetBlobParameter(params, 1, mszReaders, readername_len);
	PA_ReturnLong(params, returnValue);
}

void RFID_Plug_ValidContext( PA_PluginParameters params )
{
	PA_long32 returnValue = gReader.ValidContext();
	PA_ReturnLong(params, returnValue);
}

void RFID_Plug_EstablishContext( PA_PluginParameters params )
{
	PA_long32 returnValue = gReader.EstablishContext();
	PA_ReturnLong(params, returnValue);
}

